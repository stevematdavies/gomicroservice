{{template "base" .}}

{{define "content"}}
<div class="container">
    <div class="row">   
        <div class="col">
            <h1 class="mt-5">Test Microservices in <em>Golang&trade;</em></h1>
            <hr>
            <a href="javascript:void(0);" id="brokerBtn" class="btn btn-outline-primary" style="margin-bottom:1em;">Test Broker Service</a>
            <a href="javascript:void(0);" id="authBtn" class="btn btn-outline-warning" style="margin-bottom:1em;">Test Auth Service</a>
            <a href="javascript:void(0);" id="logBtn" class="btn btn-outline-success" style="margin-bottom:1em;">Test Logger Service</a>
            <a href="javascript:void(0);" id="grpcBtn" class="btn btn-outline-secondary" style="margin-bottom:1em;">Test Logger Service Via Grpc</a>
            <a href="javascript:void(0);" id="mlrBtn" class="btn btn-outline-info" style="margin-bottom:1em;">Test Mailer Service</a>
            <a href="javascript:void(0);" id="clrBtn" class="btn btn-outline-danger" style="margin-bottom:1em;">Clear All</a>
            <div id="output" class="mt5" style="outline: 1px solid silver; padding: 2em;">
                <span class="text-muted">Output shows here...</span>
            </div>
            <br>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h4 class="mt-5">Sent</h4>
            <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
            </div>
        </div>
        <div class="col">
            <h4 class="mt-5">Received</h4>
            <div class="mt-1" style="outline: 1px solid silver; padding:2em">
                <pre id="received"><span class="text-muted">Nothing recieved yet...</span></pre>
            </div>
        </div>
    </div>
</div>
{{end}}

{{define "js"}}
    <script>
        const brokerBtn  = document.getElementById("brokerBtn")
        const authBtn    = document.getElementById("authBtn")
        const logBtn    = document.getElementById("logBtn")
        const clrBtn    = document.getElementById("clrBtn")
        const mlrBtn    = document.getElementById("mlrBtn")
        const grpcBtn    = document.getElementById("grpcBtn")
        const output     = document.getElementById("output")
        const sent       = document.getElementById("payload")
        const received   = document.getElementById("received")

        clrBtn.addEventListener("click",() => {
            sent.innerHTML = ""
            output.innerHTML = ""
            received.innerHTML = ""
        })

        brokerBtn.addEventListener("click", async() => {
            const body = {
                method: 'POST'
            }
            try {
                const request = await fetch("http://localhost:8081",body)
                const data = await request.json()
                sent.innerHTML = "empty post request"
                received.innerHTML = JSON.stringify(data, undefined, 4)
                output.innerHTML += `<br><strong>Response from broker service</strong>: <span class="badge bg-success">${data.message}</span>`
            } catch(e) { 
                output.innerHTML +=  `<br><br>Error:  <span class="badge bg-danger">${e}</span>`
            }
        })

        authBtn.addEventListener("click", async() => {

            const headers = new Headers();
            headers.append("Content-Type", "application/json")
          
            const payload = {
                action: "auth",
                auth: {
                    email: "admin@example.com",
                    password: "verysecret"
                }
             }

             const body = {
                method: "POST",
                body: JSON.stringify(payload),
                headers
             }
       
            try {
                const request = await fetch("http://localhost:8081/handle",body)
               
                const data = await request.json()
                sent.innerHTML = JSON.stringify(payload, undefined, 4)
                received.innerHTML = JSON.stringify(data, undefined, 4)
                if(data.error){
                    output.innerHTML += `<br><strong>Error: </strong>${data.message}`
                } else {
                      output.innerHTML += `<br><strong>Response from broker service</strong>: <span class="badge bg-success">${data.message}</span>`
                }
            } catch(e) { 
                output.innerHTML +=  `<br><br>Error: <span class="badge bg-danger">${e}</span>`
            }
        })

        logBtn.addEventListener("click", async() => {
            const headers = new Headers();
            headers.append("Content-Type", "application/json")
          
            const payload = {
                action: "log",
                log: {
                    name: "Logger check",
                    data: `Logged!!! <> <>: ${new Date().toLocaleTimeString()}`
                }
             }

             const body = {
                method: "POST",
                body: JSON.stringify(payload),
                headers
             }
       
            try {
                const request = await fetch("http://localhost:8081/handle",body)
                const data = await request.json()
                sent.innerHTML = JSON.stringify(payload, undefined, 4)
                received.innerHTML = JSON.stringify(data, undefined, 4)
                if(data.error){
                    output.innerHTML += `<br><strong>Error: </strong>${data.message}`
                } else {
                      output.innerHTML += `<br><strong>Response from the logger service</strong>: <span class="badge bg-success">${data.message}</span>`
                }
            } catch(e) { 
                output.innerHTML +=  `<br><br>Error: <span class="badge bg-danger">${e}</span>`
            }
        })

        grpcBtn.addEventListener("click", async() => {
            const headers = new Headers();
            headers.append("Content-Type", "application/json")

            const payload = {
                action: "log",
                log: {
                    name: "Logger check",
                    data: `Logged!!! <> <>: ${new Date().toLocaleTimeString()}`
                }
            }

            const body = {
                method: "POST",
                body: JSON.stringify(payload),
                headers
            }

            try {
                const request = await fetch("http://localhost:8081/log-grpc",body)
                const data = await request.json()
                sent.innerHTML = JSON.stringify(payload, undefined, 4)
                received.innerHTML = JSON.stringify(data, undefined, 4)
                if(data.error){
                    output.innerHTML += `<br><strong>Error: </strong>${data.message}`
                } else {
                    output.innerHTML += `<br><strong>Response from the logger service</strong>: <span class="badge bg-success">${data.message}</span>`
                }
            } catch(e) {
                output.innerHTML +=  `<br><br>Error: <span class="badge bg-danger">${e}</span>`
            }
        })

        mlrBtn.addEventListener("click", async() => {

            const headers = new Headers();
            headers.append("Content-Type", "application/json")

            const payload = {
                action: "mail",
                mail: {
                    from: "testaja@testi.com",
                    to: "themailserver@emailserver.com",
                    Subject: "Sent from the microservice!",
                    Message:"If you see this then this test was successful!"
                }
            }

            const body = {
                method: "POST",
                body: JSON.stringify(payload),
                headers
            }

            try {
                const request = await fetch("http://localhost:8081/handle",body)
                const data = await request.json()
                sent.innerHTML = JSON.stringify(payload, undefined, 4)
                received.innerHTML = JSON.stringify(data, undefined, 4)
                if(data.error){
                    output.innerHTML += `<br><strong>Error: </strong>${data.message}`
                } else {
                    output.innerHTML += `<br><strong>Response from the logger service</strong>: <span class="badge bg-success">${data.message}</span>`
                }
            } catch(e) {
                output.innerHTML +=  `<br><br>Error: <span class="badge bg-danger">${e}</span>`
            }

        })

    </script>
{{end}}
